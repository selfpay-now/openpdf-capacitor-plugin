{
  "api": {
    "name": "OpenPdfPlugin",
    "slug": "openpdfplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "echo",
        "signature": "(options: { value: string; }) => Promise<{ value: string; }>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ value: string; }"
          }
        ],
        "returns": "Promise<{ value: string; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "echo"
      },
      {
        "name": "getPendingPdfOpened",
        "signature": "() => Promise<{ pdfuri: string; }>",
        "parameters": [],
        "returns": "Promise<{ pdfuri: string; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "getpendingpdfopened"
      },
      {
        "name": "clearPendigPfOpened",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "clearpendigpfopened"
      },
      {
        "name": "addListener",
        "signature": "(eventName: 'pdfOpened', listenerFunc: (info: { value: string; }) => void) => Promise<PluginListenerHandle>",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'pdfOpened'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "(info: { value: string; }) => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle>",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerpdfopened-"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "PluginListenerHandle",
      "slug": "pluginlistenerhandle",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "remove",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "() => Promise<void>"
        }
      ]
    }
  ],
  "enums": [],
  "typeAliases": [],
  "pluginConfigs": []
}