{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAwB,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAIlE,MAAM,OAAO,UAAW,SAAQ,SAAS;IACvC,KAAK,CAAC,IAAI,CAAC,OAA0B;QACnC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7B,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,KAAK,CAAC,mBAAmB;QACvB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACnC,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC;IAC5B,CAAC;IAED,KAAK,CAAC,mBAAmB;QACvB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;IACrC,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,UAAuB,EAAE,aAAgD;QACzF,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;IACzD,CAAC;CACF","sourcesContent":["import { PluginListenerHandle, WebPlugin } from '@capacitor/core';\n\nimport type { OpenPdfPlugin } from './definitions';\n\nexport class OpenPdfWeb extends WebPlugin implements OpenPdfPlugin {\n  async echo(options: { value: string }): Promise<{ value: string }> {\n    console.log('ECHO', options);\n    return options;\n  }\n\n  async getPendingPdfOpened(): Promise<{ pdfuri: string }> {\n    console.log('getPendingPdfOpened');\n    return { pdfuri: 'test' };\n  }\n\n  async clearPendigPfOpened(): Promise<void> {\n    console.log('clearPendigPfOpened');\n  }\n\n  async addListener(_eventName: 'pdfOpened', _listenerFunc: (info: { value: string }) => void): Promise<PluginListenerHandle> {\n    throw new Error('addListener is not supported on web');\n  }\n}\n"]}